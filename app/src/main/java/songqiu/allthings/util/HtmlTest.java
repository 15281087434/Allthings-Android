package songqiu.allthings.util;

import android.text.TextUtils;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/*******
 *
 *Created by ???
 *
 *???? 2019/9/3
 *
 *????
 *
 ********/
public class HtmlTest {


    private static final String regEx_script = "<script[^>]*?>[\\s\\S]*?<\\/script>"; // ??script??????
    private static final String regEx_style = "<style[^>]*?>[\\s\\S]*?<\\/style>"; // ??style??????
    private static final String regEx_html = "<[^>]+>"; // ??HTML????????
    private static final String regEx_space = "\\s*|\t|\r|\n";//?????????


    public static String test(String content) {
//        String str = "&lt;p&gt;     &lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;      ??????????????????4000???&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;     ?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????2500??????8000?????&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;?????????????????????????????????????????&ldquo;???&rdquo;????????????????????????????????????????????????????????????????????????????????????????????????&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;      ???????????????????????&ldquo;???&rdquo;?????????????????????????????????????????????????????????????????????????????????????????&ldquo;????&rdquo;???????6?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????&ldquo;???????????????????????????????????????????????????????????????????????????????????????????????????--???????????????&rdquo;??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;     &lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;  ";
        return  htmlDecode(content);
    }



    /**
     * @param htmlStr
     * @return ??Html??
     */
    public static String delHTMLTag(String htmlStr) {
        Pattern p_script = Pattern.compile(regEx_script, Pattern.CASE_INSENSITIVE);
        Matcher m_script = p_script.matcher(htmlStr);
        htmlStr = m_script.replaceAll(""); // ??script??

        Pattern p_style = Pattern.compile(regEx_style, Pattern.CASE_INSENSITIVE);
        Matcher m_style = p_style.matcher(htmlStr);
        htmlStr = m_style.replaceAll(""); // ??style??

        Pattern p_html = Pattern.compile(regEx_html, Pattern.CASE_INSENSITIVE);
        Matcher m_html = p_html.matcher(htmlStr);
        htmlStr = m_html.replaceAll(""); // ??html??

        Pattern p_space = Pattern.compile(regEx_space, Pattern.CASE_INSENSITIVE);
        Matcher m_space = p_space.matcher(htmlStr);
        htmlStr = m_space.replaceAll(""); // ????????
        return htmlStr.trim(); // ???????
    }

    public static String getTextFromHtml(String htmlStr) {
        htmlStr = delHTMLTag(htmlStr);
        String str = htmlEncode(htmlStr);
//        = htmlStr.replaceAll(" ", "");
        return str;
    }



    /**
     * html ??
     * @param source
     * @return
     */
    public static String htmlEncode(String source) {
        if (source == null) {
            return "";
        }
        String html = "";
        StringBuffer buffer = new StringBuffer();
        for (int i = 0; i < source.length(); i++) {
            char c = source.charAt(i);
            switch (c) {
                case '<':
                    buffer.append("&lt;");
                    break;
                case '>':
                    buffer.append("&gt;");
                    break;
                case '&':
                    buffer.append("&amp;");
                    break;
                case '"':
                    buffer.append("&quot;");
                    break;
//                case '"':
//                    buffer.append("quot;");
//                    break;
                case ' ':
                    buffer.append("&nbsp;");
                    break;


                default:
                    buffer.append(c);
            }
        }
        html = buffer.toString();
        return html;
    }


    /**
     * html ??
     * @param source
     * @return
     */
    public static String htmlDecode(String source) {
        if (TextUtils.isEmpty(source)) {
            return "";
        }
        source = source.replace("&lt;", "<");
        source = source.replace("&gt;", ">");
        source = source.replace("&amp;", "&");
        source = source.replace("&quot;", "\"");
        source = source.replace("&nbsp;", " ");
        source = source.replace("&ldquo;", "\"");
        source = source.replace("&rdquo;", "\"");
//        source = source.replace("quot;", "");
        return getTextFromHtml(source);
    }

}
